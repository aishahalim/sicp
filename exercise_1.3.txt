Exercise 1.3.  Define a procedure that takes three numbers as arguments and returns the sum of the squares of the two larger numbers.

(define (square x) (* x x))
(define (sum-of-squares x y) (+ (square x) (square y)))
(define (sum-of-squares-of-two-larger x y z) (
  cond ((> x y) (
    cond ((> y z) (sum-of-squares x y))
    (else (sum-of-squares x z))
      ) ; end conditional expression x > y
    ) ; end conditional x > y
  (else (
    cond ((> x z) (sum-of-squares x y))
    (else (sum-of-squares y z))
      ) ; end conditional expression (x <= y)
    ) ; end conditional else (x <= y)
  ) ; end procedure body
) ; end procedure definition
